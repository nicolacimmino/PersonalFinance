meta {
  name: Get Account
  type: http
  seq: 2
}

get {
  url: {{pfinance_host}}/api/accounts/:account_id
  body: none
  auth: none
}

params:path {
  account_id: {{account_id}}
}

headers {
  X-API-KEY: {{X-API-KEY}}
}

assert {
  res.status: eq 200
  res.headers["content-type"]: eq application/json
}

tests {
  const Ajv = require('ajv');
  const ajv = new Ajv();
  
  const schema = {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer"
      },
      "code": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "currency": {
        "type": "string"
      },
      "balance_cents": {
        "type": "integer"
      },
      "balance_cents_in_ref_currency": {
        "type": "integer"
      },
      "ref_currency": {
        "type": "string"
      },
      "iban": {
        "type": "string"
      },
      "status": {
        "type": "string"
      },
      "type": {
        "type": "string"
      },
      "can_create_transactions": {
        "type": "string"
      }
    },
    "required": [
      "id",
      "code",
      "description",
      "currency",
      "balance_cents",
      "balance_cents_in_ref_currency",
      "ref_currency",
      "iban",
      "status",
      "type",
      "can_create_transactions"
    ]
  }
  
  const data = res.getBody();
  
  test("response should be 200", function() {  
    expect(res.getStatus()).to.equal(200);  
  });
  
  test("response matches schema", function() {  
    const valid = ajv.validate(schema, data);
    expect(valid).to.be.true;
    if (!valid) console.log(ajv.errors);
  });
}
